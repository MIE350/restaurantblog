package com.mie.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.mie.model.Reply;
import com.mie.model.Review;
import com.mie.model.ReviewList;
import com.mie.util.DbUtil;

public class ReplyDao {

	private Connection connection;
	
	public ReplyDao(){
		connection = DbUtil.getConnection();
	}
	
	public void addReply(Reply reply){
		try{
			PreparedStatement ps = connection.prepareStatement("insert into replies(replyId,reviewId,studentId,reply,postTime) values (?, ?, ?, ?, ?)");
		ps.setInt(1, reply.getReplyId());
		ps.setInt(2, reply.getReviewId());
		ps.setInt(3, reply.getUserId());
		ps.setString(4,  reply.getReplyContent());
		ps.setDate(5,  new java.sql.Date(reply.getPostTime().getTime()));
		ps.executeUpdate();
		}catch (SQLException e){
			e.printStackTrace();
		}
	}
	
	public ReplyList getAllReviews() {
		/**
		 * This method returns the list of all students in the form of a List
		 * object.
		 */
		ReviewList reviews = new ReviewList();
		try {
			Statement statement = connection.createStatement();
			// System.out.println("getting reviews from table");
			ResultSet rs = statement.executeQuery("select * from reviews");
			while (rs.next()) {
				Review review = new Review();
				review.setUserId(rs.getInt("studentID"));
				review.setRestaurantId(rs.getInt("restaurantID"));
				review.setReviewId(rs.getInt("reviewID"));
				review.setReviewContent(rs.getString("review"));
				review.setRating(rs.getInt("rating"));
				review.setPostTime(rs.getTimestamp("postTime"));
				reviews.add(review);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return reviews;
	}
	
}
